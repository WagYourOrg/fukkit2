plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // jitpack
    maven { url 'https://jitpack.io' }

    // papermc
    maven { url 'https://papermc.io/repo/repository/maven-public/' }

    // spongepowered
    maven { url 'https://repo.spongepowered.org/maven' }

    // modrinth
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }

    // spigot
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    // paper
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "com.github.Chocohead:Fabric-ASM:v2.3"
    modImplementation "maven.modrinth:creative-one-punch:1.3-universal"



    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}", {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-gametest-api-v1"
    }

    implementation "net.fabricmc:mapping-io:0.3.0"
    implementation "net.fabricmc:tiny-remapper:0.8.6"

    implementation "org.spongepowered:configurate-core:4.1.2"
    implementation "org.spongepowered:configurate-yaml:4.1.2"
    implementation "org.yaml:snakeyaml:1.33"

    implementation "org.jetbrains:annotations-java5:23.0.0"

//    compileOnly "org.spigotmc:spigot-api:1.19.3-R0.1-SNAPSHOT"
    // paper api
    compileOnly "io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
